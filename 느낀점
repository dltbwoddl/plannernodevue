철저한 계획 없이 들어가면 꽉 막힌다.
항상 구조도나 흐름도를 만들고 해야 한다.


백엔드에서 데이터를 가져와 컴포넌트에 띄워주기 위해서는 computed를 사용하는 것이 좋다.
computed는 해당 속성이 변경될 때만 함수를 실행한다.


throw er; // Unhandled 'error'가 발생했던 이유는 mysql과의 연결이 끊어지기 때문이다.
한번 longgoal에 들어오면 서버를 실행할 때 열려있던 mysql과의 연결고리가
.end()로 끊어진다. 때문에 새로고침을 했을 때 에러가 발생한 것이다. 
.end()를 하지 않으면 에러가 발생하지 않는다.
mysql과의 연결을 끊는 다른 방법을 고안하자.


mysql문제, 에러가 났을 때 발생 지점뿐만아니라 그전에 있던 코드에서 발생했을 가능성을 두자.
그리고 직접적인 것들을 해결했는데도 에러가 발생하는 이유는 주로 생각하지 못한 별것 아닌 것에 실수가 있을 수 있다.
pool.js에서 발생한
+Unhandled rejection Error: ER_ACCESS_DENIED_ERROR: Access denied for user ''@'localhost' (using password: NO)문제 해결
에러에서 중요한 것은 ''@'localhost'이부분이다. user명이 안들어가 있음을 의미한다.
이는 생성자부분에서 빈 db_info가 들어갔기 때문이다.


여러번의 데이터 베이스 호출에로 인해 비동기 처리가 발생해 한 번에 보내기 어려울 때는
async each를 사용한다. 주의할점은 에러가 나면 callback함수가 진행되지 않는다는 점이다
때문에 에러가 발생해도 callback(null)로 에러가 발생하지 않은 것처럼 해야 한다.


vue는 페이지가 이동할때마다 main.js가 실행된다.


프론트와 백을 같이 개발할 때는 명확히 역할을 분리해서 생각하는 것이 좋다.

vue-bootstrap는 html에 가는 코드와 다르다.
html로 변환되면서 바뀐다.

철저한 기획을 하고 한다.

항상 정리하며 진행하기.
